/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package leetcode;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class ValidParenthesesTest {
    @Test
    void example1() {
        // setup
        ValidParentheses sol = new ValidParentheses();
        String input = "()";
        // execute
        boolean actual = sol.isValid(input);
        // verify
        assertTrue(actual);
    }

    @Test
    void example2() {
        // setup
        ValidParentheses sol = new ValidParentheses();
        String input = "()[]{}";
        // execute
        boolean actual = sol.isValid(input);
        // verify
        assertTrue(actual);
    }

    @Test
    void example3() {
        // setup
        ValidParentheses sol = new ValidParentheses();
        String input = "(]";
        // execute
        boolean actual = sol.isValid(input);
        // verify
        assertFalse(actual);
    }

    @Test
    void example4() {
        // setup
        ValidParentheses sol = new ValidParentheses();
        String input = "([)]";
        // execute
        boolean actual = sol.isValid(input);
        // verify
        assertFalse(actual);
    }

    @Test
    void example5() {
        // setup
        ValidParentheses sol = new ValidParentheses();
        String input = "(";
        // execute
        boolean actual = sol.isValid(input);
        // verify
        assertFalse(actual);
    }

    @Test
    void example6() {
        // setup
        ValidParentheses sol = new ValidParentheses();
        String input = "()(({})[])";
        // execute
        boolean actual = sol.isValid(input);
        // verify
        assertTrue(actual);
    }

    @Test
    void example7() {
        // setup
        ValidParentheses sol = new ValidParentheses();
        String input = "((";
        // execute
        boolean actual = sol.isValid(input);
        // verify
        assertFalse(actual);
    }

    @Test
    void example8() {
        // setup
        ValidParentheses sol = new ValidParentheses();
        String input = "){";
        // execute
        boolean actual = sol.isValid(input);
        // verify
        assertFalse(actual);
    }
}
