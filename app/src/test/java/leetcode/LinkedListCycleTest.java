/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package leetcode;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class LinkedListCycleTest {

  @Test
  void example1() {
    // setup
    LinkedListCycle linkedListCycle = new LinkedListCycle();
    ListNode node1 = new ListNode(3);
    ListNode node2 = new ListNode(2);
    ListNode node3 = new ListNode(0);
    ListNode node4 = new ListNode(-4);

    node1.next = node2;
    node2.next = node3;
    node3.next = node4;
    node4.next = node2;

    boolean actual = linkedListCycle.hasCycle(node1);

    assertEquals(true, actual);
  }

  @Test
  void example2() {
    // setup
    LinkedListCycle linkedListCycle = new LinkedListCycle();
    ListNode node1 = new ListNode(1);
    ListNode node2 = new ListNode(2);

    node1.next = node2;
    node2.next = node1;

    boolean actual = linkedListCycle.hasCycle(node1);

    assertEquals(true, actual);
  }

  @Test
  void example3() {
    // setup
    LinkedListCycle linkedListCycle = new LinkedListCycle();
    ListNode node1 = new ListNode(1);
    ListNode node2 = new ListNode(1);

    node1.next = node2;

    boolean actual = linkedListCycle.hasCycle(node1);

    assertEquals(false, actual);
  }

  @Test
  void example4() {
    // setup
    LinkedListCycle linkedListCycle = new LinkedListCycle();
    ListNode node1 = new ListNode(1);

    boolean actual = linkedListCycle.hasCycle(node1);

    assertEquals(false, actual);
  }

  @Test
  void example5() {
    // setup
    LinkedListCycle linkedListCycle = new LinkedListCycle();

    boolean actual = linkedListCycle.hasCycle(null);

    assertEquals(false, actual);
  }
}
