/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package leetcode;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import static org.junit.jupiter.api.Assertions.*;

import java.util.stream.Stream;

class ConvertSortedArrayToBinarySearchTreeTest {
  @ParameterizedTest
  @MethodSource("provider")
  void test(int[] input, TreeNode expected) {
    // setup
    ConvertSortedArrayToBinarySearchTree sol = new ConvertSortedArrayToBinarySearchTree();
    // execute
    TreeNode actual = sol.sortedArrayToBST(input);
    // verify
    assertEquals(expected, actual);
  }

  static Stream<Arguments> provider() {
    return Stream.of(
        Arguments.of(
            new int[] { 0 },
            new TreeNode(0)), //
        Arguments.of(
            new int[] { 0, 1 },
            new TreeNode(0, null, new TreeNode(1))), //
        Arguments.of(
            new int[] { -1, 0, 1 },
            new TreeNode(0, new TreeNode(-1), new TreeNode(1))), //
        Arguments.of(
            new int[] { -1, 0, 1, 2 },
            new TreeNode(0, new TreeNode(-1), new TreeNode(1, null, new TreeNode(2)))), //
        Arguments.of(
            new int[] { -10, -3, 0, 5, 9 },
            new TreeNode(0, new TreeNode(-10, null, new TreeNode(-3)), new TreeNode(5, null, new TreeNode(9)))), //
        Arguments.of(
            new int[] { -10, -3, 0, 2, 5, 9 },
            new TreeNode(0, new TreeNode(-10, null, new TreeNode(-3)),
                new TreeNode(5, new TreeNode(2), new TreeNode(9)))), //
        Arguments.of(
            new int[] { -12, -10, -3, 0, 2, 5, 9 },
            new TreeNode(0, new TreeNode(-10, new TreeNode(-12), new TreeNode(-3)),
                new TreeNode(5, new TreeNode(2), new TreeNode(9)))) //
    );
  }
}
